<?php

$NAMESPACE$

use $PROJETO$\Repositories\Interfaces\BaseInterface;
use Prettus\Repository\Criteria\RequestCriteria;
use Prettus\Repository\Traits\CacheableRepository;
use Prettus\Repository\Eloquent\BaseRepository as PrettusBaseRepository;


class BaseRepository extends PrettusBaseRepository implements BaseInterface
{
    use CacheableRepository;

    protected $fieldSearchable = [];

    public function boot()
    {
        $this->pushCriteria(app(RequestCriteria::class));
    }

    public function model()
    {
        return '';
    }

    public function resource()
    {
        return '';
    }

    public function rules($idUpdate = '')
    {
        return [];
    }

    public function labels()
    {
        return [];
    }

    public function iniciarTransacao()
    {
        $model = $this->model->newInstance();
        $model->getConnection()->beginTransaction();
        return $model;
    }

    public function commitarTransacao($transacao)
    {
        $transacao->getConnection()->commit();
    }

    public function rollBackTransacao($transacao)
    {
        $transacao->getConnection()->rollBack();
    }
}